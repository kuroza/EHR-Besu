{
  "contractName": "EHRSC",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "requestDocuments",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[],\"name\":\"requestDocuments\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/assid/Documents/Workspace/TrufflePatient-NW/contracts/EHRSC.sol\":\"EHRSC\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/assid/Documents/Workspace/TrufflePatient-NW/contracts/EHRSC.sol\":{\"keccak256\":\"0x1e328f25a2f9ee7c0f200ee6618ef99e0c393343296b5cefd37dde12b08d2497\",\"urls\":[\"bzz-raw://34929109be536e183e75e96d56a77cff5659fe988cbcb6301515cb49cf6406be\",\"dweb:/ipfs/QmPbnJ5wtWNmC78cEBjX4EF7inLamFGComMkjXo255U6iG\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50732a230d5b4557c27a777095f5329c0f172457b1576000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101b8806100746000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c12c81b714610030575b600080fd5b6100386100b3565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561007857808201518184015260208101905061005d565b50505050905090810190601f1680156100a55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60603373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610147576040518060400160405280601381526020017f446f63756d656e747320726574726965766564000000000000000000000000008152509050610180565b6040518060400160405280601581526020017f446f63746f72206e6f742072656769737465726564000000000000000000000081525090505b9056fea265627a7a72315820b66c45aa7bd637b4cd468037c9e4d93f63fde1e738c4cc0bacbe267f72441d4d64736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c12c81b714610030575b600080fd5b6100386100b3565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561007857808201518184015260208101905061005d565b50505050905090810190601f1680156100a55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60603373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610147576040518060400160405280601381526020017f446f63756d656e747320726574726965766564000000000000000000000000008152509050610180565b6040518060400160405280601581526020017f446f63746f72206e6f742072656769737465726564000000000000000000000081525090505b9056fea265627a7a72315820b66c45aa7bd637b4cd468037c9e4d93f63fde1e738c4cc0bacbe267f72441d4d64736f6c63430005100032",
  "sourceMap": "66:1041:0:-;;;252:224;8:9:-1;5:2;;;30:1;27;20:12;5:2;252:224:0;356:42;347:6;;:51;;;;;;;;;;;;;;;;;;66:1041;;;;;;",
  "deployedSourceMap": "66:1041:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;66:1041:0;;;;;;;;;;;;;;;;;;;482:324;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;482:324:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;531:13;714:10;704:20;;:6;;;;;;;;;;;:20;;;700:99;;;726:28;;;;;;;;;;;;;;;;;;;;;700:99;769:30;;;;;;;;;;;;;;;;;;;482:324;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.8.0;\n\ncontract EHRSC {\n    // address[] private persons;\n    address private doctor;\n    // mapping(address => Person) public persons;\n\n    struct Person {\n        bool registered;\n    }\n\n    constructor() public {\n        // doctor = 0x4256472057Bf645F995DD8EF24480C367e154bE7;\n        doctor = 0x2a230D5b4557C27a777095f5329C0F172457b157;\n        // persons.push('0x2a230D5b4557C27a777095f5329C0F172457b157');\n    }\n\n    function requestDocuments() public view returns (string memory) {\n        // require(\n        //     persons[msg.sender].registered,\n        //     \"Unregistered person cannot call this function\"\n        // );\n        if (doctor == msg.sender) return \"Documents retrieved\";\n        else return \"Doctor not registered\";\n    }\n\n    // function getName() public view returns (string memory) {\n    //     return name;\n    // }\n\n    // function setName(string memory _name) public {\n    //     name = _name;\n    // }\n\n    // function getPatientAddress() public view returns (address) {\n    //     return patientAddress;\n    // }\n}\n",
  "sourcePath": "C:/Users/assid/Documents/Workspace/TrufflePatient-NW/contracts/EHRSC.sol",
  "ast": {
    "absolutePath": "/C/Users/assid/Documents/Workspace/TrufflePatient-NW/contracts/EHRSC.sol",
    "exportedSymbols": {
      "EHRSC": [
        30
      ]
    },
    "id": 31,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 30,
        "linearizedBaseContracts": [
          30
        ],
        "name": "EHRSC",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3,
            "name": "doctor",
            "nodeType": "VariableDeclaration",
            "scope": 30,
            "src": "121:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "121:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "canonicalName": "EHRSC.Person",
            "id": 6,
            "members": [
              {
                "constant": false,
                "id": 5,
                "name": "registered",
                "nodeType": "VariableDeclaration",
                "scope": 6,
                "src": "224:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 4,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "224:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Person",
            "nodeType": "StructDefinition",
            "scope": 30,
            "src": "200:46:0",
            "visibility": "public"
          },
          {
            "body": {
              "id": 13,
              "nodeType": "Block",
              "src": "273:203:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 9,
                      "name": "doctor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "347:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "307832613233304435623435353743323761373737303935663533323943304631373234353762313537",
                      "id": 10,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "356:42:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "value": "0x2a230D5b4557C27a777095f5329C0F172457b157"
                    },
                    "src": "347:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 12,
                  "nodeType": "ExpressionStatement",
                  "src": "347:51:0"
                }
              ]
            },
            "documentation": null,
            "id": 14,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "263:2:0"
            },
            "returnParameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "273:0:0"
            },
            "scope": 30,
            "src": "252:224:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 28,
              "nodeType": "Block",
              "src": "546:260:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 22,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 19,
                      "name": "doctor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "704:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 20,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122,
                        "src": "714:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 21,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "714:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "704:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "argumentTypes": null,
                      "hexValue": "446f63746f72206e6f742072656769737465726564",
                      "id": 25,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "776:23:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_5e54a8cede42b171459004df4909cda489ebbbc5a0d7a0cd8abbaf4734b7349e",
                        "typeString": "literal_string \"Doctor not registered\""
                      },
                      "value": "Doctor not registered"
                    },
                    "functionReturnParameters": 18,
                    "id": 26,
                    "nodeType": "Return",
                    "src": "769:30:0"
                  },
                  "id": 27,
                  "nodeType": "IfStatement",
                  "src": "700:99:0",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "hexValue": "446f63756d656e747320726574726965766564",
                      "id": 23,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "733:21:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_e41336277c2ebed003cfb7b27965b5c46fb53af2e9fd07a894714c5d2b2d05a7",
                        "typeString": "literal_string \"Documents retrieved\""
                      },
                      "value": "Documents retrieved"
                    },
                    "functionReturnParameters": 18,
                    "id": 24,
                    "nodeType": "Return",
                    "src": "726:28:0"
                  }
                }
              ]
            },
            "documentation": null,
            "id": 29,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestDocuments",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "507:2:0"
            },
            "returnParameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "531:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "531:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "530:15:0"
            },
            "scope": 30,
            "src": "482:324:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 31,
        "src": "66:1041:0"
      }
    ],
    "src": "32:1076:0"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/assid/Documents/Workspace/TrufflePatient-NW/contracts/EHRSC.sol",
    "exportedSymbols": {
      "EHRSC": [
        30
      ]
    },
    "id": 31,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 30,
        "linearizedBaseContracts": [
          30
        ],
        "name": "EHRSC",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3,
            "name": "doctor",
            "nodeType": "VariableDeclaration",
            "scope": 30,
            "src": "121:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "121:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "canonicalName": "EHRSC.Person",
            "id": 6,
            "members": [
              {
                "constant": false,
                "id": 5,
                "name": "registered",
                "nodeType": "VariableDeclaration",
                "scope": 6,
                "src": "224:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 4,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "224:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Person",
            "nodeType": "StructDefinition",
            "scope": 30,
            "src": "200:46:0",
            "visibility": "public"
          },
          {
            "body": {
              "id": 13,
              "nodeType": "Block",
              "src": "273:203:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 9,
                      "name": "doctor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "347:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "307832613233304435623435353743323761373737303935663533323943304631373234353762313537",
                      "id": 10,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "356:42:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "value": "0x2a230D5b4557C27a777095f5329C0F172457b157"
                    },
                    "src": "347:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 12,
                  "nodeType": "ExpressionStatement",
                  "src": "347:51:0"
                }
              ]
            },
            "documentation": null,
            "id": 14,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "263:2:0"
            },
            "returnParameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "273:0:0"
            },
            "scope": 30,
            "src": "252:224:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 28,
              "nodeType": "Block",
              "src": "546:260:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 22,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 19,
                      "name": "doctor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "704:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 20,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122,
                        "src": "714:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 21,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "714:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "704:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "argumentTypes": null,
                      "hexValue": "446f63746f72206e6f742072656769737465726564",
                      "id": 25,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "776:23:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_5e54a8cede42b171459004df4909cda489ebbbc5a0d7a0cd8abbaf4734b7349e",
                        "typeString": "literal_string \"Doctor not registered\""
                      },
                      "value": "Doctor not registered"
                    },
                    "functionReturnParameters": 18,
                    "id": 26,
                    "nodeType": "Return",
                    "src": "769:30:0"
                  },
                  "id": 27,
                  "nodeType": "IfStatement",
                  "src": "700:99:0",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "hexValue": "446f63756d656e747320726574726965766564",
                      "id": 23,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "733:21:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_e41336277c2ebed003cfb7b27965b5c46fb53af2e9fd07a894714c5d2b2d05a7",
                        "typeString": "literal_string \"Documents retrieved\""
                      },
                      "value": "Documents retrieved"
                    },
                    "functionReturnParameters": 18,
                    "id": 24,
                    "nodeType": "Return",
                    "src": "726:28:0"
                  }
                }
              ]
            },
            "documentation": null,
            "id": 29,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestDocuments",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "507:2:0"
            },
            "returnParameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "531:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "531:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "530:15:0"
            },
            "scope": 30,
            "src": "482:324:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 31,
        "src": "66:1041:0"
      }
    ],
    "src": "32:1076:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x0E21B6B754E0b59B1B42946B55DdE57e26523A66",
      "transactionHash": "0x12e727d13ada22956267a1bcbdc787f5e1c01765aeef82f0642ddae5ccc7fc8a"
    }
  },
  "schemaVersion": "3.2.3",
  "updatedAt": "2021-09-26T13:56:16.805Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}